{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Documents\\\\GitHub\\\\Nautical-Frank-Mole-React\\\\src\\\\views\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport Chart from 'chart.js/auto';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = ({\n  label,\n  value\n}) => {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_c = Counter;\nconst Dashboard = () => {\n  _s();\n  const [graphData, setGraphData] = useState([10, 20, 30, 40, 50]);\n  const [graphQuery, setGraphQuery] = useState(''); // State for the graph query\n  const [userData, setUserData] = useState(1000); // Mock user data\n  const [eventData, setEventData] = useState(50); // Mock event data\n  const chartContainerRef = useRef(null);\n  const myChartRef = useRef(null);\n\n  //  const graphData = [60, 40, 80, 30, 70];\n\n  const theme = createTheme({\n    palette: {\n      primary: {\n        main: '#c9edf3'\n      },\n      secondary: {\n        main: '#ffe4df'\n      }\n    }\n  });\n  const handleGenerateGraph = () => {\n    // Check if myChart exists, and destroy it if it does\n    if (myChartRef.current !== null) {\n      myChartRef.current.destroy();\n    }\n\n    // Your code to generate or fetch data and create a new chart goes here\n    const graphData = {\n      labels: ['Label 1', 'Label 2', 'Label 3', 'Label 4', 'Label 5'],\n      datasets: [{\n        label: 'My Chart',\n        data: [60, 40, 80, 30, 70],\n        backgroundColor: ['red', 'blue', 'green', 'orange', 'purple'] // Add your own colors\n      }]\n    };\n\n    // Create a new canvas element\n    const canvas = document.createElement('canvas');\n    canvas.width = 50; // Set the width and height as per your requirement\n    canvas.height = 50;\n\n    // Append the canvas to the chart container\n    if (chartContainerRef.current) {\n      chartContainerRef.current.innerHTML = ''; // Clear previous charts\n      chartContainerRef.current.appendChild(canvas);\n    }\n\n    // Create a new chart\n    const ctx = canvas.getContext('2d');\n    if (ctx) {\n      myChartRef.current = new Chart(ctx, {\n        type: 'bar',\n        data: graphData\n        // ... other chart configurations\n      });\n    }\n  };\n  const handleCloseChart = () => {\n    // Check if myChart exists, and destroy it if it does\n    if (myChartRef.current !== null) {\n      myChartRef.current.destroy();\n    }\n\n    // Clear the chart container\n    if (chartContainerRef.current) {\n      chartContainerRef.current.innerHTML = '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleGenerateGraph,\n            children: \"Generate Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: handleCloseChart,\n            children: \"Close Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Counter, {\n          label: \"Registered Users\",\n          value: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Counter, {\n          label: \"Event Data\",\n          value: eventData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: chartContainerRef,\n            style: {\n              width: '20rem',\n              height: '16rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"+NC0QEBipH4MCSSHTWwjBqeflsQ=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Counter\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useRef","useState","CssBaseline","Container","Typography","Grid","Button","Chart","ThemeProvider","createTheme","jsxDEV","_jsxDEV","Counter","label","value","item","xs","sm","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","Dashboard","_s","graphData","setGraphData","graphQuery","setGraphQuery","userData","setUserData","eventData","setEventData","chartContainerRef","myChartRef","theme","palette","primary","main","secondary","handleGenerateGraph","current","destroy","labels","datasets","data","backgroundColor","canvas","document","createElement","width","height","innerHTML","appendChild","ctx","getContext","type","handleCloseChart","container","spacing","color","onClick","ref","style","_c2","$RefreshReg$"],"sources":["C:/Users/alexa/Documents/GitHub/Nautical-Frank-Mole-React/src/views/Dashboard.tsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Chart from 'chart.js/auto';\r\nimport {ThemeProvider, createTheme} from '@mui/material/styles';\r\n\r\n\r\ninterface CounterProps {\r\n    label: string;\r\n    value: number;\r\n}\r\n\r\nconst Counter: React.FC<CounterProps> = ({label, value}) => {\r\n    return (\r\n        <Grid item xs={12} sm={6}>\r\n            <Typography variant=\"h6\">{label}</Typography>\r\n            <Typography variant=\"subtitle1\">{value}</Typography>\r\n        </Grid>\r\n    );\r\n};\r\n\r\n\r\nconst Dashboard: React.FC = () => {\r\n    const [graphData, setGraphData] = useState<number[]>([10, 20, 30, 40, 50]);\r\n    const [graphQuery, setGraphQuery] = useState<string>(''); // State for the graph query\r\n    const [userData, setUserData] = useState<number>(1000); // Mock user data\r\n    const [eventData, setEventData] = useState<number>(50); // Mock event data\r\n    const chartContainerRef = useRef<HTMLDivElement | null>(null);\r\n    const myChartRef = useRef<Chart | null>(null);\r\n\r\n    //  const graphData = [60, 40, 80, 30, 70];\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            primary: {\r\n                main: '#c9edf3',\r\n            },\r\n            secondary: {\r\n                main: '#ffe4df'\r\n            }\r\n        },\r\n    });\r\n\r\n    const handleGenerateGraph = () => {\r\n        // Check if myChart exists, and destroy it if it does\r\n        if (myChartRef.current !== null) {\r\n            myChartRef.current.destroy();\r\n        }\r\n\r\n        // Your code to generate or fetch data and create a new chart goes here\r\n        const graphData = {\r\n            labels: ['Label 1', 'Label 2', 'Label 3', 'Label 4', 'Label 5'],\r\n            datasets: [\r\n                {\r\n                    label: 'My Chart',\r\n                    data: [60, 40, 80, 30, 70],\r\n                    backgroundColor: ['red', 'blue', 'green', 'orange', 'purple'], // Add your own colors\r\n                },\r\n            ],\r\n        };\r\n\r\n        // Create a new canvas element\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = 50; // Set the width and height as per your requirement\r\n        canvas.height = 50;\r\n\r\n        // Append the canvas to the chart container\r\n        if (chartContainerRef.current) {\r\n            chartContainerRef.current.innerHTML = ''; // Clear previous charts\r\n            chartContainerRef.current.appendChild(canvas);\r\n        }\r\n\r\n        // Create a new chart\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            myChartRef.current = new Chart(ctx, {\r\n                type: 'bar',\r\n                data: graphData,\r\n                // ... other chart configurations\r\n            });\r\n        }\r\n    };\r\n    const handleCloseChart = () => {\r\n        // Check if myChart exists, and destroy it if it does\r\n        if (myChartRef.current !== null) {\r\n            myChartRef.current.destroy();\r\n        }\r\n\r\n        // Clear the chart container\r\n        if (chartContainerRef.current) {\r\n            chartContainerRef.current.innerHTML = '';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline/>\r\n            <Container>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h4\">Dashboard</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleGenerateGraph}>\r\n                            Generate Chart\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={handleCloseChart}>\r\n                            Close Chart\r\n                        </Button>\r\n                    </Grid>\r\n                    <Counter label=\"Registered Users\" value={userData}/>\r\n                    <Counter label=\"Event Data\" value={eventData}/>\r\n                    <Grid item xs={12}>\r\n                        <div ref={chartContainerRef} style={{width: '20rem', height: '16rem'}}></div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAcC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AACxD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,IAAI,MAAM,oBAAoB;AAErC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,eAAe;AACjC,SAAQC,aAAa,EAAEC,WAAW,QAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQhE,MAAMC,OAA+B,GAAGA,CAAC;EAACC,KAAK;EAAEC;AAAK,CAAC,KAAK;EACxD,oBACIH,OAAA,CAACN,IAAI;IAACU,IAAI;IAACC,EAAE,EAAE,EAAG;IAACC,EAAE,EAAE,CAAE;IAAAC,QAAA,gBACrBP,OAAA,CAACP,UAAU;MAACe,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAEL;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eAC7CZ,OAAA,CAACP,UAAU;MAACe,OAAO,EAAC,WAAW;MAAAD,QAAA,EAAEJ;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEf,CAAC;AAACC,EAAA,GAPIZ,OAA+B;AAUrC,MAAMa,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC1E,MAAM,CAAC4B,UAAU,EAAEC,aAAa,CAAC,GAAG7B,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EAC1D,MAAM,CAAC8B,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAS,IAAI,CAAC,CAAC,CAAC;EACxD,MAAM,CAACgC,SAAS,EAAEC,YAAY,CAAC,GAAGjC,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EACxD,MAAMkC,iBAAiB,GAAGnC,MAAM,CAAwB,IAAI,CAAC;EAC7D,MAAMoC,UAAU,GAAGpC,MAAM,CAAe,IAAI,CAAC;;EAE7C;;EAEA,MAAMqC,KAAK,GAAG5B,WAAW,CAAC;IACtB6B,OAAO,EAAE;MACLC,OAAO,EAAE;QACLC,IAAI,EAAE;MACV,CAAC;MACDC,SAAS,EAAE;QACPD,IAAI,EAAE;MACV;IACJ;EACJ,CAAC,CAAC;EAEF,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAC9B;IACA,IAAIN,UAAU,CAACO,OAAO,KAAK,IAAI,EAAE;MAC7BP,UAAU,CAACO,OAAO,CAACC,OAAO,CAAC,CAAC;IAChC;;IAEA;IACA,MAAMjB,SAAS,GAAG;MACdkB,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;MAC/DC,QAAQ,EAAE,CACN;QACIjC,KAAK,EAAE,UAAU;QACjBkC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAC1BC,eAAe,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAE;MACnE,CAAC;IAET,CAAC;;IAED;IACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,KAAK,GAAG,EAAE,CAAC,CAAC;IACnBH,MAAM,CAACI,MAAM,GAAG,EAAE;;IAElB;IACA,IAAIlB,iBAAiB,CAACQ,OAAO,EAAE;MAC3BR,iBAAiB,CAACQ,OAAO,CAACW,SAAS,GAAG,EAAE,CAAC,CAAC;MAC1CnB,iBAAiB,CAACQ,OAAO,CAACY,WAAW,CAACN,MAAM,CAAC;IACjD;;IAEA;IACA,MAAMO,GAAG,GAAGP,MAAM,CAACQ,UAAU,CAAC,IAAI,CAAC;IACnC,IAAID,GAAG,EAAE;MACLpB,UAAU,CAACO,OAAO,GAAG,IAAIpC,KAAK,CAACiD,GAAG,EAAE;QAChCE,IAAI,EAAE,KAAK;QACXX,IAAI,EAAEpB;QACN;MACJ,CAAC,CAAC;IACN;EACJ,CAAC;EACD,MAAMgC,gBAAgB,GAAGA,CAAA,KAAM;IAC3B;IACA,IAAIvB,UAAU,CAACO,OAAO,KAAK,IAAI,EAAE;MAC7BP,UAAU,CAACO,OAAO,CAACC,OAAO,CAAC,CAAC;IAChC;;IAEA;IACA,IAAIT,iBAAiB,CAACQ,OAAO,EAAE;MAC3BR,iBAAiB,CAACQ,OAAO,CAACW,SAAS,GAAG,EAAE;IAC5C;EACJ,CAAC;EAED,oBACI3C,OAAA,CAACH,aAAa;IAAC6B,KAAK,EAAEA,KAAM;IAAAnB,QAAA,gBACxBP,OAAA,CAACT,WAAW;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACdZ,OAAA,CAACR,SAAS;MAAAe,QAAA,eACNP,OAAA,CAACN,IAAI;QAACuD,SAAS;QAACC,OAAO,EAAE,CAAE;QAAA3C,QAAA,gBACvBP,OAAA,CAACN,IAAI;UAACU,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAE,QAAA,eACdP,OAAA,CAACP,UAAU;YAACe,OAAO,EAAC,IAAI;YAAAD,QAAA,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eACPZ,OAAA,CAACN,IAAI;UAACU,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAE,QAAA,gBACdP,OAAA,CAACL,MAAM;YAACa,OAAO,EAAC,WAAW;YAAC2C,KAAK,EAAC,SAAS;YAACC,OAAO,EAAErB,mBAAoB;YAAAxB,QAAA,EAAC;UAE1E;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTZ,OAAA,CAACL,MAAM;YAACa,OAAO,EAAC,WAAW;YAAC2C,KAAK,EAAC,WAAW;YAACC,OAAO,EAAEJ,gBAAiB;YAAAzC,QAAA,EAAC;UAEzE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eACPZ,OAAA,CAACC,OAAO;UAACC,KAAK,EAAC,kBAAkB;UAACC,KAAK,EAAEiB;QAAS;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACpDZ,OAAA,CAACC,OAAO;UAACC,KAAK,EAAC,YAAY;UAACC,KAAK,EAAEmB;QAAU;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC/CZ,OAAA,CAACN,IAAI;UAACU,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAE,QAAA,eACdP,OAAA;YAAKqD,GAAG,EAAE7B,iBAAkB;YAAC8B,KAAK,EAAE;cAACb,KAAK,EAAE,OAAO;cAAEC,MAAM,EAAE;YAAO;UAAE;YAAAjC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAExB,CAAC;AAACG,EAAA,CAjGID,SAAmB;AAAAyC,GAAA,GAAnBzC,SAAmB;AAmGzB,eAAeA,SAAS;AAAC,IAAAD,EAAA,EAAA0C,GAAA;AAAAC,YAAA,CAAA3C,EAAA;AAAA2C,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}