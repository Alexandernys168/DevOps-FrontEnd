{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Documents\\\\GitHub\\\\Nautical-Frank-Mole-React\\\\src\\\\views\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [graphData, setGraphData] = useState([10, 20, 30, 40, 50]);\n  const [graphQuery, setGraphQuery] = useState(''); // State for the graph query\n\n  useEffect(() => {\n    renderChart(graphData);\n  }, [graphData]);\n  const handleGenerateGraph = () => {\n    // Fetch data based on the graphQuery or use any other method to get data\n    // For now, let's use dummy data\n    const data = [60, 40, 80, 30, 70];\n    setGraphData(data);\n  };\n  const renderChart = data => {\n    const ctx = document.getElementById('myChart');\n    if (!ctx) return;\n    const myChart = new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: ['Label 1', 'Label 2', 'Label 3', 'Label 4', 'Label 5'],\n        datasets: [{\n          label: 'Graph Data',\n          data: data,\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1\n        }]\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"div\",\n      gutterBottom: true,\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-item\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-item\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: \"50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-item\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Graph Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Graph Query\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: graphQuery,\n        onChange: e => setGraphQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleGenerateGraph,\n        style: {\n          marginTop: '1rem'\n        },\n        children: \"Generate Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '2rem',\n          height: '400px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"myChart\",\n          width: \"400\",\n          height: \"400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"UsfVInt/0RLS7N6zSIONDQBHsVM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","CssBaseline","Container","Typography","Grid","TextField","Button","Chart","jsxDEV","_jsxDEV","Dashboard","_s","graphData","setGraphData","graphQuery","setGraphQuery","renderChart","handleGenerateGraph","data","ctx","document","getElementById","myChart","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","component","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","container","spacing","item","xs","sm","md","className","style","marginTop","fullWidth","value","onChange","e","target","color","onClick","height","id","width","_c","$RefreshReg$"],"sources":["C:/Users/alexa/Documents/GitHub/Nautical-Frank-Mole-React/src/views/Dashboard.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Chart from 'chart.js/auto';\r\n\r\nconst Dashboard: React.FC = () => {\r\n    const [graphData, setGraphData] = useState<number[]>([10, 20, 30, 40, 50]);\r\n    const [graphQuery, setGraphQuery] = useState<string>(''); // State for the graph query\r\n\r\n    useEffect(() => {\r\n        renderChart(graphData);\r\n    }, [graphData]);\r\n\r\n    const handleGenerateGraph = () => {\r\n        // Fetch data based on the graphQuery or use any other method to get data\r\n        // For now, let's use dummy data\r\n        const data = [60, 40, 80, 30, 70];\r\n        setGraphData(data);\r\n    };\r\n\r\n    const renderChart = (data: number[]) => {\r\n        const ctx = document.getElementById('myChart') as HTMLCanvasElement;\r\n        if (!ctx) return;\r\n\r\n        const myChart = new Chart(ctx, {\r\n            type: 'bar',\r\n            data: {\r\n                labels: ['Label 1', 'Label 2', 'Label 3', 'Label 4', 'Label 5'],\r\n                datasets: [\r\n                    {\r\n                        label: 'Graph Data',\r\n                        data: data,\r\n                        backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                        borderColor: 'rgba(75, 192, 192, 1)',\r\n                        borderWidth: 1,\r\n                    },\r\n                ],\r\n            },\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"lg\" >\r\n            <CssBaseline />\r\n            <Typography variant=\"h4\" component=\"div\" gutterBottom>\r\n                Admin Dashboard\r\n            </Typography>\r\n\r\n            {/* Dashboard Details */}\r\n            <Grid container spacing={3}>\r\n                {/* Amount of Patients */}\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <div className=\"dashboard-item\">\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Patients\r\n                        </Typography>\r\n                        <Typography variant=\"h4\">100</Typography>\r\n                    </div>\r\n                </Grid>\r\n\r\n                {/* Amount of Users */}\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <div className=\"dashboard-item\">\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Users\r\n                        </Typography>\r\n                        <Typography variant=\"h4\">50</Typography>\r\n                    </div>\r\n                </Grid>\r\n\r\n                {/* Amount of Events */}\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                    <div className=\"dashboard-item\">\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Events\r\n                        </Typography>\r\n                        <Typography variant=\"h4\">20</Typography>\r\n                    </div>\r\n                </Grid>\r\n\r\n                {/* Add more items as needed */}\r\n            </Grid>\r\n\r\n            {/* Graph Input Section */}\r\n            <div style={{ marginTop: '2rem' }}>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                    Graph Input\r\n                </Typography>\r\n                <TextField\r\n                    label=\"Graph Query\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={graphQuery}\r\n                    onChange={(e) => setGraphQuery(e.target.value)}\r\n                />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleGenerateGraph} style={{ marginTop: '1rem' }}>\r\n                    Generate Graph\r\n                </Button>\r\n\r\n                {/* Chart Container */}\r\n                <div style={{ marginTop: '2rem', height: '400px' }}>\r\n                    <canvas id=\"myChart\" width=\"400\" height=\"400\"></canvas>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}